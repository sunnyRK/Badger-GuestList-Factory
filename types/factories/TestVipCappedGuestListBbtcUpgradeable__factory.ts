/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestVipCappedGuestListBbtcUpgradeable,
  TestVipCappedGuestListBbtcUpgradeableInterface,
} from "../TestVipCappedGuestListBbtcUpgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "guestRoot",
        type: "bytes32",
      },
    ],
    name: "ProveInvitation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "guestRoot",
        type: "bytes32",
      },
    ],
    name: "SetGuestRoot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "cap",
        type: "uint256",
      },
    ],
    name: "SetTotalDepositCap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "cap",
        type: "uint256",
      },
    ],
    name: "SetUserDepositCap",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_guest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guestRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "guests",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wrapper_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "proveInvitation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "remainingTotalDepositAllowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "remainingUserDepositAllowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "guestRoot_",
        type: "bytes32",
      },
    ],
    name: "setGuestRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_guests",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "_invited",
        type: "bool[]",
      },
    ],
    name: "setGuests",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cap_",
        type: "uint256",
      },
    ],
    name: "setTotalDepositCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cap_",
        type: "uint256",
      },
    ],
    name: "setUserDepositCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDepositCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "userDepositCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapper",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a2b806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80639135b6c3116100a2578063c26ad22d11610071578063c26ad22d14610294578063c4d66de8146102b0578063ebbf5c17146102cc578063f2fde38b146102e8578063f51c7512146103045761010b565b80639135b6c31461021e578063a0622a5c1461023a578063a8a9c26014610258578063ac210cc7146102765761010b565b80635db88e85116100de5780635db88e85146101bc578063715018a6146101da57806377f32f84146101e45780638da5cb5b146102005761010b565b806303d4fb75146101105780630eda85ee146101405780631a9ee26f1461017057806345d1cfe0146101a0575b600080fd5b61012a60048036038101906101259190611397565b610322565b604051610137919061173f565b60405180910390f35b61015a60048036038101906101559190611397565b6103ea565b6040516101679190611689565b60405180910390f35b61018a60048036038101906101859190611418565b61040a565b6040516101979190611689565b60405180910390f35b6101ba60048036038101906101b591906114f9565b6104a1565b005b6101c4610556565b6040516101d1919061173f565b60405180910390f35b6101e261055c565b005b6101fe60048036038101906101f99190611484565b6105e4565b005b6102086106f2565b604051610215919061166e565b60405180910390f35b61023860048036038101906102339190611522565b61071c565b005b6102426107db565b60405161024f919061173f565b60405180910390f35b610260610896565b60405161026d919061173f565b60405180910390f35b61027e61089c565b60405161028b919061166e565b60405180910390f35b6102ae60048036038101906102a991906113c0565b6108c2565b005b6102ca60048036038101906102c59190611397565b610ad8565b005b6102e660048036038101906102e19190611522565b610c06565b005b61030260048036038101906102fd9190611397565b610cc5565b005b61030c610dbd565b60405161031991906116a4565b60405180910390f35b60006103e3606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401610382919061166e565b60206040518083038186803b15801561039a57600080fd5b505afa1580156103ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d2919061154b565b606754610dc390919063ffffffff16565b9050919050565b60696020528060005260406000206000915054906101000a900460ff1681565b600080606960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905080801561047157508461046e87610322565b10155b80156104845750846104816107db565b10155b15610493576001915050610499565b60009150505b949350505050565b6104a9610dd9565b73ffffffffffffffffffffffffffffffffffffffff166104c76106f2565b73ffffffffffffffffffffffffffffffffffffffff161461051d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610514906116ff565b60405180910390fd5b806066819055506066547ff31172dfe9d39a93e27305df08f61a7f02e44070846c51c290c60a93597bd51560405160405180910390a250565b60685481565b610564610dd9565b73ffffffffffffffffffffffffffffffffffffffff166105826106f2565b73ffffffffffffffffffffffffffffffffffffffff16146105d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cf906116ff565b60405180910390fd5b6105e26000610de1565b565b6105ec610dd9565b73ffffffffffffffffffffffffffffffffffffffff1661060a6106f2565b73ffffffffffffffffffffffffffffffffffffffff1614610660576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610657906116ff565b60405180910390fd5b6106ec848480806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050610ea7565b50505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610724610dd9565b73ffffffffffffffffffffffffffffffffffffffff166107426106f2565b73ffffffffffffffffffffffffffffffffffffffff1614610798576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078f906116ff565b60405180910390fd5b806067819055507fff92f33fbebe5d3177eb2e5face87085417f569955cd785211554df1d90084a56067546040516107d0919061173f565b60405180910390a150565b6000610891606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561084857600080fd5b505afa15801561085c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610880919061154b565b606854610dc390919063ffffffff16565b905090565b60675481565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6108cd83838361102a565b6108d657600080fd5b6000600167ffffffffffffffff811115610919577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156109475781602001602082028036833780820191505090505b5090506000600167ffffffffffffffff81111561098d577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156109bb5781602001602082028036833780820191505090505b50905084826000815181106109f9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600181600081518110610a6f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019015159081151581525050610a8b8282610ea7565b6066548573ffffffffffffffffffffffffffffffffffffffff167fb0265f949f67383910ea35ddfd8a25e2b554a8f9b878b8ca1e2336b433ad2d7260405160405180910390a35050505050565b600060019054906101000a900460ff16610b005760008054906101000a900460ff1615610b09565b610b086110ae565b5b610b48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3f906116df565b60405180910390fd5b60008060019054906101000a900460ff161590508015610b98576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610ba06110bf565b81606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610c025760008060016101000a81548160ff0219169083151502179055505b5050565b610c0e610dd9565b73ffffffffffffffffffffffffffffffffffffffff16610c2c6106f2565b73ffffffffffffffffffffffffffffffffffffffff1614610c82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c79906116ff565b60405180910390fd5b806068819055507f4dca2e8d25c91b34082757532d59a08da6a173c9e60694e3a1b2cba6ccb07be1606854604051610cba919061173f565b60405180910390a150565b610ccd610dd9565b73ffffffffffffffffffffffffffffffffffffffff16610ceb6106f2565b73ffffffffffffffffffffffffffffffffffffffff1614610d41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d38906116ff565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610db1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da8906116bf565b60405180910390fd5b610dba81610de1565b50565b60665481565b60008183610dd1919061176b565b905092915050565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8051825114610eb557600080fd5b60005b825181101561102557600073ffffffffffffffffffffffffffffffffffffffff16838281518110610f12577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161415610f3b57611025565b818181518110610f74577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160696000858481518110610fb9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550808061101d906117f1565b915050610eb8565b505050565b6000808460405160200161103e9190611653565b6040516020818303038152906040528051906020012090506110a4848480806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505060665483611118565b9150509392505050565b60006110b93061112f565b15905090565b600060019054906101000a900460ff1661110e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111059061171f565b60405180910390fd5b611116611152565b565b60008261112585846111b3565b1490509392505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff166111a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111989061171f565b60405180910390fd5b6111b16111ac610dd9565b610de1565b565b60008082905060005b8451811015611243576000858281518110611200577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190508083116112225761121b838261124e565b925061122f565b61122c818461124e565b92505b50808061123b906117f1565b9150506111bc565b508091505092915050565b600082600052816020526040600020905092915050565b600081359050611274816119b0565b92915050565b60008083601f84011261128c57600080fd5b8235905067ffffffffffffffff8111156112a557600080fd5b6020830191508360208202830111156112bd57600080fd5b9250929050565b60008083601f8401126112d657600080fd5b8235905067ffffffffffffffff8111156112ef57600080fd5b60208301915083602082028301111561130757600080fd5b9250929050565b60008083601f84011261132057600080fd5b8235905067ffffffffffffffff81111561133957600080fd5b60208301915083602082028301111561135157600080fd5b9250929050565b600081359050611367816119c7565b92915050565b60008135905061137c816119de565b92915050565b600081519050611391816119de565b92915050565b6000602082840312156113a957600080fd5b60006113b784828501611265565b91505092915050565b6000806000604084860312156113d557600080fd5b60006113e386828701611265565b935050602084013567ffffffffffffffff81111561140057600080fd5b61140c8682870161130e565b92509250509250925092565b6000806000806060858703121561142e57600080fd5b600061143c87828801611265565b945050602061144d8782880161136d565b935050604085013567ffffffffffffffff81111561146a57600080fd5b6114768782880161130e565b925092505092959194509250565b6000806000806040858703121561149a57600080fd5b600085013567ffffffffffffffff8111156114b457600080fd5b6114c08782880161127a565b9450945050602085013567ffffffffffffffff8111156114df57600080fd5b6114eb878288016112c4565b925092505092959194509250565b60006020828403121561150b57600080fd5b600061151984828501611358565b91505092915050565b60006020828403121561153457600080fd5b60006115428482850161136d565b91505092915050565b60006020828403121561155d57600080fd5b600061156b84828501611382565b91505092915050565b61157d8161179f565b82525050565b61159461158f8261179f565b61183a565b82525050565b6115a3816117b1565b82525050565b6115b2816117bd565b82525050565b60006115c560268361175a565b91506115d08261189a565b604082019050919050565b60006115e8602e8361175a565b91506115f3826118e9565b604082019050919050565b600061160b60208361175a565b915061161682611938565b602082019050919050565b600061162e602b8361175a565b915061163982611961565b604082019050919050565b61164d816117e7565b82525050565b600061165f8284611583565b60148201915081905092915050565b60006020820190506116836000830184611574565b92915050565b600060208201905061169e600083018461159a565b92915050565b60006020820190506116b960008301846115a9565b92915050565b600060208201905081810360008301526116d8816115b8565b9050919050565b600060208201905081810360008301526116f8816115db565b9050919050565b60006020820190508181036000830152611718816115fe565b9050919050565b6000602082019050818103600083015261173881611621565b9050919050565b60006020820190506117546000830184611644565b92915050565b600082825260208201905092915050565b6000611776826117e7565b9150611781836117e7565b9250828210156117945761179361185e565b5b828203905092915050565b60006117aa826117c7565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006117fc826117e7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561182f5761182e61185e565b5b600182019050919050565b60006118458261184c565b9050919050565b60006118578261188d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160601b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6119b98161179f565b81146119c457600080fd5b50565b6119d0816117bd565b81146119db57600080fd5b50565b6119e7816117e7565b81146119f257600080fd5b5056fea26469706673582212203c81edd5e9bdf7189e02f9b43a770120a308eb67419d3b0f83419f4f45b3138a64736f6c63430008040033";

type TestVipCappedGuestListBbtcUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestVipCappedGuestListBbtcUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestVipCappedGuestListBbtcUpgradeable__factory extends ContractFactory {
  constructor(...args: TestVipCappedGuestListBbtcUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestVipCappedGuestListBbtcUpgradeable> {
    return super.deploy(
      overrides || {}
    ) as Promise<TestVipCappedGuestListBbtcUpgradeable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestVipCappedGuestListBbtcUpgradeable {
    return super.attach(address) as TestVipCappedGuestListBbtcUpgradeable;
  }
  connect(signer: Signer): TestVipCappedGuestListBbtcUpgradeable__factory {
    return super.connect(
      signer
    ) as TestVipCappedGuestListBbtcUpgradeable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestVipCappedGuestListBbtcUpgradeableInterface {
    return new utils.Interface(
      _abi
    ) as TestVipCappedGuestListBbtcUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestVipCappedGuestListBbtcUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestVipCappedGuestListBbtcUpgradeable;
  }
}
