/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GenericProxyFactory,
  GenericProxyFactoryInterface,
} from "../GenericProxyFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "created",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ProxyCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_instance",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "address",
        name: "instanceCreated",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_instance",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "create2",
    outputs: [
      {
        internalType: "address",
        name: "instanceCreated",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_master",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
    ],
    name: "predictDeterministicAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a5e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063360d0fad1461004657806368dd803e14610076578063a3f697ba146100a7575b600080fd5b610060600480360381019061005b9190610629565b6100d8565b60405161006d9190610838565b60405180910390f35b610090600480360381019061008b9190610665565b6100ed565b60405161009e929190610853565b60405180910390f35b6100c160048036038101906100bc91906106d1565b6101d9565b6040516100cf929190610853565b60405180910390f35b60006100e58383306102c3565b905092915050565b600060606100fb8686610343565b91508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f9678a1e87ca9f1a37dc659a97b39d812d98cd236947e1b53b3d0d6fd346acb6e60405160405180910390a360008484905011156101ba576101b18285858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061041a565b915091506101d0565b8160405180602001604052806000815250915091505b94509492505050565b600060606101e6856104e0565b91508473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f9678a1e87ca9f1a37dc659a97b39d812d98cd236947e1b53b3d0d6fd346acb6e60405160405180910390a360008484905011156102a55761029c8285858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061041a565b915091506102bb565b8160405180602001604052806000815250915091505b935093915050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528460601b60148201527f5af43d82803e903d91602b57fd5bf3ff0000000000000000000000000000000060288201528260601b603882015283604c82015260378120606c820152605560378201209150509392505050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528360601b60148201527f5af43d82803e903d91602b57fd5bf300000000000000000000000000000000006028820152826037826000f5915050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610414576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040b906108a5565b60405180910390fd5b92915050565b600060606000808573ffffffffffffffffffffffffffffffffffffffff16856040516104469190610821565b6000604051808303816000865af19150503d8060008114610483576040519150601f19603f3d011682016040523d82523d6000602084013e610488565b606091505b50915091508181906104d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c79190610883565b60405180910390fd5b5085819350935050509250929050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0915050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a7906108c5565b60405180910390fd5b919050565b6000813590506105c4816109fa565b92915050565b6000813590506105d981610a11565b92915050565b60008083601f8401126105f157600080fd5b8235905067ffffffffffffffff81111561060a57600080fd5b60208301915083600182028301111561062257600080fd5b9250929050565b6000806040838503121561063c57600080fd5b600061064a858286016105b5565b925050602061065b858286016105ca565b9150509250929050565b6000806000806060858703121561067b57600080fd5b6000610689878288016105b5565b945050602061069a878288016105ca565b935050604085013567ffffffffffffffff8111156106b757600080fd5b6106c3878288016105df565b925092505092959194509250565b6000806000604084860312156106e657600080fd5b60006106f4868287016105b5565b935050602084013567ffffffffffffffff81111561071157600080fd5b61071d868287016105df565b92509250509250925092565b61073281610928565b82525050565b6000610743826108e5565b61074d81856108fb565b935061075d818560208601610964565b61076681610997565b840191505092915050565b600061077c826108e5565b610786818561090c565b9350610796818560208601610964565b80840191505092915050565b60006107ad826108f0565b6107b78185610917565b93506107c7818560208601610964565b6107d081610997565b840191505092915050565b60006107e8601783610917565b91506107f3826109a8565b602082019050919050565b600061080b601683610917565b9150610816826109d1565b602082019050919050565b600061082d8284610771565b915081905092915050565b600060208201905061084d6000830184610729565b92915050565b60006040820190506108686000830185610729565b818103602083015261087a8184610738565b90509392505050565b6000602082019050818103600083015261089d81846107a2565b905092915050565b600060208201905081810360008301526108be816107db565b9050919050565b600060208201905081810360008301526108de816107fe565b9050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600061093382610944565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015610982578082015181840152602081019050610967565b83811115610991576000848401525b50505050565b6000601f19601f8301169050919050565b7f455243313136373a2063726561746532206661696c6564000000000000000000600082015250565b7f455243313136373a20637265617465206661696c656400000000000000000000600082015250565b610a0381610928565b8114610a0e57600080fd5b50565b610a1a8161093a565b8114610a2557600080fd5b5056fea2646970667358221220b9830c3effaf61fa29fa4e297675977559e11580426ae227d9c54df3ed2ba48f64736f6c63430008040033";

type GenericProxyFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GenericProxyFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GenericProxyFactory__factory extends ContractFactory {
  constructor(...args: GenericProxyFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GenericProxyFactory> {
    return super.deploy(overrides || {}) as Promise<GenericProxyFactory>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GenericProxyFactory {
    return super.attach(address) as GenericProxyFactory;
  }
  connect(signer: Signer): GenericProxyFactory__factory {
    return super.connect(signer) as GenericProxyFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GenericProxyFactoryInterface {
    return new utils.Interface(_abi) as GenericProxyFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GenericProxyFactory {
    return new Contract(address, _abi, signerOrProvider) as GenericProxyFactory;
  }
}
