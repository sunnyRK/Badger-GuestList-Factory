/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PriceOracle, PriceOracleInterface } from "../PriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_spookyRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_solidlyRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_curveRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_iUniswapLPOracleFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "CURVE_ROUTER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SOLIDLY_ROUTER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SPOOKY_ROUTER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "chainRouters",
    outputs: [
      {
        internalType: "address",
        name: "SPOOKY_ROUTER",
        type: "address",
      },
      {
        internalType: "address",
        name: "SOLIDLY_ROUTER",
        type: "address",
      },
      {
        internalType: "address",
        name: "CURVE_ROUTER",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "findOptimalSwap",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurveQuote",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSolidlyQuote",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_lpAmount",
        type: "uint256",
      },
    ],
    name: "getUnderlyingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "totalLpPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getUniV2Quote",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "iUniswapLPOracleFactory",
    outputs: [
      {
        internalType: "contract IUniswapLPOracleFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_spookyRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_solidlyRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_curveRouter",
        type: "address",
      },
    ],
    name: "setRoutersForSpecificChainId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_lpAmount",
        type: "uint256",
      },
    ],
    name: "viewUnderlyingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "totalLpPrice",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200205738038062002057833981810160405281019062000037919062000209565b600060405180606001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681525090506000620000aa620001e560201b60201c565b9050816069600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505082606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050620002c3565b6000804690508091505090565b6000815190506200020381620002a9565b92915050565b600080600080608085870312156200022057600080fd5b60006200023087828801620001f2565b94505060206200024387828801620001f2565b93505060406200025687828801620001f2565b92505060606200026987828801620001f2565b91505092959194509250565b6000620002828262000289565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620002b48162000275565b8114620002c057600080fd5b50565b611d8480620002d36000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80639871bc21116100975780639fa6b47a116100665780639fa6b47a146102a4578063e49b30da146102c2578063ef6bcc75146102e0578063f2fde38b146102fc57610100565b80639871bc211461021a5780639972e7c2146102385780639ae14ef0146102685780639dd62b581461028657610100565b806340c811a6116100d357806340c811a6146101a3578063564b81ef146101d4578063715018a6146101f25780638da5cb5b146101fc57610100565b80630e43d40b1461010557806318645b431461012357806318c870fc1461014157806320e1805114610173575b600080fd5b61010d610318565b60405161011a9190611868565b60405180910390f35b61012b61033e565b60405161013891906117df565b60405180910390f35b61015b6004803603810190610156919061159a565b610364565b60405161016a939291906117fa565b60405180910390f35b61018d600480360381019061018891906114e1565b6103ee565b60405161019a9190611913565b60405180910390f35b6101bd60048036038101906101b89190611492565b610504565b6040516101cb929190611883565b60405180910390f35b6101dc6109fa565b6040516101e99190611913565b60405180910390f35b6101fa610a07565b005b610204610a8f565b60405161021191906117df565b60405180910390f35b610222610ab9565b60405161022f91906117df565b60405180910390f35b610252600480360381019061024d91906114e1565b610bf6565b60405161025f9190611913565b60405180910390f35b610270610d0e565b60405161027d91906117df565b60405180910390f35b61028e610e4b565b60405161029b91906117df565b60405180910390f35b6102ac610f88565b6040516102b991906117df565b60405180910390f35b6102ca610fae565b6040516102d791906117df565b60405180910390f35b6102fa60048036038101906102f591906115ec565b610fd4565b005b61031660048036038101906103119190611469565b6111a4565b005b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60696020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b600080606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b04c6d3f856040518263ffffffff1660e01b815260040161044c91906117df565b60206040518083038186803b15801561046457600080fd5b505afa158015610478573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049c91906115c3565b9050600081116104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d8906118b3565b60405180910390fd5b620f424081846104f19190611a6c565b6104fb9190611a3b565b91505092915050565b60606000806105116109fa565b905060008061051e610ab9565b73ffffffffffffffffffffffffffffffffffffffff16635e1e6325878a8a6040518463ffffffff1660e01b815260040161055a9392919061192e565b604080518083038186803b15801561057157600080fd5b505afa158015610585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a9919061164f565b9150915060006105b7610d0e565b73ffffffffffffffffffffffffffffffffffffffff16634e21df758a8a8a6040518463ffffffff1660e01b81526004016105f393929190611831565b604080518083038186803b15801561060a57600080fd5b505afa15801561061e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610642919061151d565b915050600080600267ffffffffffffffff811115610689577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156106b75781602001602082028036833780820191505090505b5090508a816000815181106106f5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050898160018151811061076a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506107ac610e4b565b73ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8a836040518363ffffffff1660e01b81526004016107e6929190611965565b60006040518083038186803b1580156107fe57600080fd5b505afa92505050801561083457506040513d6000823e3d601f19601f820116820180604052508101906108319190611559565b60015b610870573d8060008114610864576040519150601f19603f3d011682016040523d82523d6000602084013e610869565b606091505b50506108c2565b806001825161087f9190611ac6565b815181106108b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519250505b81851115610960578483111561091957826040518060400160405280600581526020017f637572766500000000000000000000000000000000000000000000000000000081525090975097505050505050506109f2565b846040518060400160405280600581526020017f534f4c494400000000000000000000000000000000000000000000000000000081525090975097505050505050506109f2565b818311156109af57826040518060400160405280600581526020017f637572766500000000000000000000000000000000000000000000000000000081525090975097505050505050506109f2565b816040518060400160405280600681526020017f73706f6f6b79000000000000000000000000000000000000000000000000000081525090975097505050505050505b935093915050565b6000804690508091505090565b610a0f61129c565b73ffffffffffffffffffffffffffffffffffffffff16610a2d610a8f565b73ffffffffffffffffffffffffffffffffffffffff1614610a83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7a906118f3565b60405180910390fd5b610a8d60006112a4565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080610ac46109fa565b90506000606960008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905080602001519250505090565b600080606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc57d4df856040518263ffffffff1660e01b8152600401610c5491906117df565b602060405180830381600087803b158015610c6e57600080fd5b505af1158015610c82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca691906115c3565b905060008111610ceb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce2906118b3565b60405180910390fd5b620f42408184610cfb9190611a6c565b610d059190611a3b565b91505092915050565b600080610d196109fa565b90506000606960008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905080604001519250505090565b600080610e566109fa565b90506000606960008381526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905080600001519250505090565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610fdc61129c565b73ffffffffffffffffffffffffffffffffffffffff16610ffa610a8f565b73ffffffffffffffffffffffffffffffffffffffff1614611050576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611047906118f3565b60405180910390fd5b600060405180606001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152509050806069600087815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050505050505050565b6111ac61129c565b73ffffffffffffffffffffffffffffffffffffffff166111ca610a8f565b73ffffffffffffffffffffffffffffffffffffffff1614611220576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611217906118f3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611290576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611287906118d3565b60405180910390fd5b611299816112a4565b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600061137d611378846119ba565b611995565b9050808382526020820190508285602086028201111561139c57600080fd5b60005b858110156113cc57816113b28882611454565b84526020840193506020830192505060018101905061139f565b5050509392505050565b6000813590506113e581611d09565b92915050565b6000815190506113fa81611d09565b92915050565b600082601f83011261141157600080fd5b815161142184826020860161136a565b91505092915050565b60008151905061143981611d20565b92915050565b60008135905061144e81611d37565b92915050565b60008151905061146381611d37565b92915050565b60006020828403121561147b57600080fd5b6000611489848285016113d6565b91505092915050565b6000806000606084860312156114a757600080fd5b60006114b5868287016113d6565b93505060206114c6868287016113d6565b92505060406114d78682870161143f565b9150509250925092565b600080604083850312156114f457600080fd5b6000611502858286016113d6565b92505060206115138582860161143f565b9150509250929050565b6000806040838503121561153057600080fd5b600061153e858286016113eb565b925050602061154f85828601611454565b9150509250929050565b60006020828403121561156b57600080fd5b600082015167ffffffffffffffff81111561158557600080fd5b61159184828501611400565b91505092915050565b6000602082840312156115ac57600080fd5b60006115ba8482850161143f565b91505092915050565b6000602082840312156115d557600080fd5b60006115e384828501611454565b91505092915050565b6000806000806080858703121561160257600080fd5b60006116108782880161143f565b9450506020611621878288016113d6565b9350506040611632878288016113d6565b9250506060611643878288016113d6565b91505092959194509250565b6000806040838503121561166257600080fd5b600061167085828601611454565b92505060206116818582860161142a565b9150509250929050565b600061169783836116a3565b60208301905092915050565b6116ac81611afa565b82525050565b6116bb81611afa565b82525050565b60006116cc826119f6565b6116d68185611a19565b93506116e1836119e6565b8060005b838110156117125781516116f9888261168b565b975061170483611a0c565b9250506001810190506116e5565b5085935050505092915050565b61172881611b42565b82525050565b600061173982611a01565b6117438185611a2a565b9350611753818560208601611b66565b61175c81611c57565b840191505092915050565b6000611774601683611a2a565b915061177f82611c68565b602082019050919050565b6000611797602683611a2a565b91506117a282611c91565b604082019050919050565b60006117ba602083611a2a565b91506117c582611ce0565b602082019050919050565b6117d981611b38565b82525050565b60006020820190506117f460008301846116b2565b92915050565b600060608201905061180f60008301866116b2565b61181c60208301856116b2565b61182960408301846116b2565b949350505050565b600060608201905061184660008301866116b2565b61185360208301856116b2565b61186060408301846117d0565b949350505050565b600060208201905061187d600083018461171f565b92915050565b6000604082019050818103600083015261189d818561172e565b90506118ac60208301846117d0565b9392505050565b600060208201905081810360008301526118cc81611767565b9050919050565b600060208201905081810360008301526118ec8161178a565b9050919050565b6000602082019050818103600083015261190c816117ad565b9050919050565b600060208201905061192860008301846117d0565b92915050565b600060608201905061194360008301866117d0565b61195060208301856116b2565b61195d60408301846116b2565b949350505050565b600060408201905061197a60008301856117d0565b818103602083015261198c81846116c1565b90509392505050565b600061199f6119b0565b90506119ab8282611b99565b919050565b6000604051905090565b600067ffffffffffffffff8211156119d5576119d4611c28565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611a4682611b38565b9150611a5183611b38565b925082611a6157611a60611bf9565b5b828204905092915050565b6000611a7782611b38565b9150611a8283611b38565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611abb57611aba611bca565b5b828202905092915050565b6000611ad182611b38565b9150611adc83611b38565b925082821015611aef57611aee611bca565b5b828203905092915050565b6000611b0582611b18565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611b4d82611b54565b9050919050565b6000611b5f82611b18565b9050919050565b60005b83811015611b84578082015181840152602081019050611b69565b83811115611b93576000848401525b50505050565b611ba282611c57565b810181811067ffffffffffffffff82111715611bc157611bc0611c28565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f50726963652073686f756c642062652076616c69642100000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b611d1281611afa565b8114611d1d57600080fd5b50565b611d2981611b0c565b8114611d3457600080fd5b50565b611d4081611b38565b8114611d4b57600080fd5b5056fea26469706673582212207501642264f147ccf2a4f2ece7f311bddaa8f52c74211a8e1adc3fcdfc72998f64736f6c63430008040033";

type PriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PriceOracle__factory extends ContractFactory {
  constructor(...args: PriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _spookyRouter: string,
    _solidlyRouter: string,
    _curveRouter: string,
    _iUniswapLPOracleFactory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PriceOracle> {
    return super.deploy(
      _spookyRouter,
      _solidlyRouter,
      _curveRouter,
      _iUniswapLPOracleFactory,
      overrides || {}
    ) as Promise<PriceOracle>;
  }
  getDeployTransaction(
    _spookyRouter: string,
    _solidlyRouter: string,
    _curveRouter: string,
    _iUniswapLPOracleFactory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _spookyRouter,
      _solidlyRouter,
      _curveRouter,
      _iUniswapLPOracleFactory,
      overrides || {}
    );
  }
  attach(address: string): PriceOracle {
    return super.attach(address) as PriceOracle;
  }
  connect(signer: Signer): PriceOracle__factory {
    return super.connect(signer) as PriceOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceOracleInterface {
    return new utils.Interface(_abi) as PriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceOracle {
    return new Contract(address, _abi, signerOrProvider) as PriceOracle;
  }
}
